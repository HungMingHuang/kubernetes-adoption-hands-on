apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"run":"wordpress-test"},"name":"wordpress-test","namespace":"oldhu"},"spec":{"containers":[{"image":"some-wordpress","imagePullPolicy":"Always","name":"wordpress","ports":[{"containerPort":80}]},{"image":"some-mysql","imagePullPolicy":"Always","name":"mysql","ports":[{"containerPort":3306}]}]}}
  creationTimestamp: "2021-10-11T16:28:38Z"
  labels:
    db: mysql
    run: wordpress-test
    server: wordpress
  name: wordpress-test
  namespace: oldhu
  resourceVersion: "8200"
  uid: 773d166a-2c0b-432f-8b13-7c0b98f33239
spec:
  containers:
  - image: some-wordpress
    imagePullPolicy: Always
    name: wordpress
    ports:
    - containerPort: 80
      protocol: TCP
    resources:
      requests:
        memory: "64mi"
        cpu: "250m"
      limits:
        memory: "128mi"
        cpu: "500m"
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-92fnj
      readOnly: true
    #livenessProbe:預設120秒內服務能啟動成功，使用httpGet 確認wordpress服務正常
    #readiness probes:使用tcpSocket確認db 3306 port正常
    livenessProbe:
      httpGet:
        path: /healthcheck
        port: 80
        httpHeaders:
        - name: Custom-Header
          value: Awesome
      initialDelaySeconds: 120
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 3
    readinessProbe:
      tcpSocket:
        port: 3306
      initialDelaySeconds: 120
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 3
  - image: some-mysql
    imagePullPolicy: Always
    name: mysql
    ports:
    - containerPort: 3306
      protocol: TCP
    resources:
      requests:
        memory: "256mi"
        cpu: "250m"
      limits:
        memory: "1024mi"
        cpu: "500m"
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-92fnj
      readOnly: true
    livenessProbe:
      tcpSocket:
        port: 3306
      initialDelaySeconds: 120
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 3
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  #設定Alway當probe失敗時可自動restart
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-92fnj
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2021-10-11T16:28:38Z"
    message: '0/1 nodes are available: 1 node(s) had taint {node-role.kubernetes.io/master:
      }, that the pod didn''t tolerate.'
    reason: Unschedulable
    status: "False"
    type: PodScheduled
  phase: Pending
  qosClass: BestEffort
